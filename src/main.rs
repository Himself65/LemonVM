#![feature(new_uninit)]
#![feature(slice_from_raw_parts)]
#![feature(vec_into_raw_parts)]

#[macro_use]
extern crate lazy_static;

pub mod bin_format;
pub mod vm;

use bin_format::*;
fn main() {
    let constant_pool = [
        0x02, 0x00, 0x00, 0x00, 0x4c, 0x00, 0x65, 0x00,
        0x01, 0x00, 0x00, 0x00,
        0x01, 0x01
    ];
    let bytes = [
        0x02, 0x00, 0x00, 0x00, 0x4c, 0x00, 0x65, 0x00,
        0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00,
        0x00,
        0x00,
        0x00,
        0x01,0x00,0x00,0x00,
        0x00,0x00,0x00,0x00,
        0x00,0x00,0x00,0x00,
        0x00,0x00,0x00,0x00,
        0x00,0x00,0x00,0x00,
        0x00,0x00,0x00,0x00,
        0x00,0x00,0x00,0x00,
    ];
    reader::Reader::read_constant_pool(constant_pool.as_ptr(), constant_pool.len());
    let mut reader = reader::Reader::new(bytes.as_ptr());
    let proto = reader.read_proto();
    println!("{}",proto);
}
